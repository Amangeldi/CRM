@using System.Net.Http
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.AspNetCore.Components.Routing
@using Microsoft.AspNetCore.Components.Web
@using Microsoft.JSInterop
@using CRM.BLL.DTO
@using CRM.BLL.Services
@inject CRM.BLL.Interfaces.ICompanyService companyService
@code{
    [Parameter]
    public string NewCompany { get; set; } = "block";
    [Parameter]
    public string Qualufied { get; set; } = "none";
    [Parameter]
    public string NotQualified { get; set; } = "none";
    [Parameter]
    public string LeftStyle { get; set; } = @"'title-new-companies' 'content' 'content' 'content' 'content' 'content' 'content' 'content' 'content' 'content'
                     'title-qualified'
                      'title-not-qualified'";
    public IEnumerable<CompanyDTO> companies;
    public override async Task SetParametersAsync(ParameterView parameters)
    {
        companies = await companyService.GetCompanies();
        await base.SetParametersAsync(parameters);
    }
    public int x = 0;
}
    <div class="left" style="grid-template-areas:@LeftStyle">
        <div class="title title-new-companies" @onclick="openNewCompaniesDiv">
            Новые компании
        </div>
        <div class="content content-new-companies" style="display:@NewCompany">
            @foreach(var company in companies)
            {
                <a href="http://@company.Website" target="_blank">@company.CompanyLegalName</a> <br />
            }
        </div>
        <div class="title title-qualified" @onclick="openQualifiedDiv">
            Квалифицированные
        </div>
        <div class="content content-qualified" style="display:@Qualufied">
            ElementW @{ ++x;} @x <br />
            ElementW @{ ++x;} @x <br />
            ElementW @{ ++x;} @x <br />
            ElementW @{ ++x;} @x <br />
            ElementW @{ ++x;} @x <br />
            ElementW @{ ++x;} @x <br />
            ElementW @{ ++x;} @x <br />
            ElementW @{ ++x;} @x <br />
        </div>
        <div class="title title-not-qualified" @onclick="openNotQualifiedDiv">
            Не квалифицированные
        </div>
        <div class="content content-not-qualified" style="display:@NotQualified">
            ELEMENT E  @{ ++x;} @x <br />
            ELEMENT E  @{ ++x;} @x <br />
            ELEMENT E  @{ ++x;} @x <br />
            ELEMENT E  @{ ++x;} @x <br />
            ELEMENT E  @{ ++x;} @x <br />
            ELEMENT E  @{ ++x;} @x <br />
            ELEMENT E  @{ ++x;} @x <br />
            ELEMENT E  @{ ++x;} @x <br />
            ELEMENT E  @{ ++x;} @x <br />
        </div>
    </div>
@code{

    private void openNewCompaniesDiv()
    {
        NewCompany = "block";
        Qualufied = "none";
        NotQualified = "none";
        LeftStyle = @"'title-new-companies''content' 'content' 'content' 'content' 'content' 'content' 'content' 'content' 'content'
                     'title-qualified'
                      'title-not-qualified'";
    }
    private void openQualifiedDiv()
    {
        NewCompany = "none";
        Qualufied = "block";
        NotQualified = "none";
        LeftStyle = @"'title-new-companies' 
                     'title-qualified''content' 'content' 'content' 'content' 'content' 'content' 'content' 'content' 'content'
                      'title-not-qualified'";
    }
    private void openNotQualifiedDiv()
    {
        NewCompany = "none";
        Qualufied = "none";
        NotQualified = "block";
        LeftStyle = @"'title-new-companies' 
                     'title-qualified'
                      'title-not-qualified''content' 'content' 'content' 'content' 'content' 'content' 'content' 'content' 'content'";
    }
}
