@using System.Net.Http
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.AspNetCore.Components.Routing
@using Microsoft.AspNetCore.Components.Web
@using Microsoft.JSInterop
@using CRM.BLL.DTO
@using CRM.BLL.Services
@using System.Threading;
@inject CRM.BLL.Interfaces.ICompanyService companyService
@inject CRM.BLL.Services.SelectedItemService SelectService
@inject CRM.RAZOR.Mappings.CompanyMap CompanyMap
<div class="controls">
    <div class="flex-center not-q-div">
        <button id="i1" @onclick="setNotQualify" disabled="@IsDisabled">Квалификацию не прошёл</button>
    </div>
    <div class="flex-center q-div">
        <button @onclick="setQualify" disabled="@IsDisabled">Квалифицировать как клиента</button>
    </div>
</div>

@code {
    public bool IsDisabled { get; set; }
    private async void setQualify()
    {
        await companyService.SetQualified(SelectService.GetId());
        await SelectService.UpdateCompanies();
        await CompanyMap.UpdateCompanies();
        SelectService.SetId(0);
        pause();

    }
    private async void setNotQualify()
    {
        await companyService.SetNotQualified(SelectService.GetId());
        await SelectService.UpdateCompanies();
        await CompanyMap.UpdateCompanies();
        SelectService.SetId(0);
        pause();
    }
    async void pause()
    {
        IsDisabled = true;
        await InvokeAsync(StateHasChanged);
        Thread.Sleep(1200);
        IsDisabled = false;
        await InvokeAsync(StateHasChanged);
    }
}
